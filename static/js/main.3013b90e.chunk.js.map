{"version":3,"sources":["images/burger.png","App.js","reportWebVitals.js","index.js"],"names":["App","useState","className","src","frog1","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sn2EAAe,G,MAAA,IAA0B,oC,OC8F1BA,MAnFf,WAEE,MAAgCC,qBAAhC,mBA8BA,OA9BA,UA+BE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKA,UAAU,gBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,cAAd,uBACA,wDACyB,uBADzB,kBASF,qBAAKA,UAAU,YAAf,SACE,qBAAKC,IAAKC,EAAOC,IAAI,sCAK7B,yBAASH,UAAU,YAAnB,SACE,sBAAKA,UAAU,gBAAf,UACE,oDACA,oLAGA,+BACE,6CACA,uCACA,uCACA,sCACA,wCACA,4CAEF,oGAAsE,gEAAtE,OACA,2JACA,kHAAqF,mBAAGI,KAAK,kCAAkCC,OAAO,SAASL,UAAU,WAAWM,IAAI,aAAnF,qBAArF,QAAqM,mBAAGF,KAAK,sCAAsCC,OAAO,SAASL,UAAU,WAAWM,IAAI,aAAvF,qBAArM,2CAGJ,wBAAQN,UAAU,aAAlB,SACE,sBAAKA,UAAU,gBAAf,UACE,mBAAGI,KAAK,kCAAkCC,OAAO,SAASC,IAAI,aAA9D,SAA2E,cAAC,IAAD,MAC3E,mBAAGF,KAAK,sCAAsCC,OAAO,SAASC,IAAI,aAAlE,SAA+E,cAAC,IAAD,eC3E1EC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3013b90e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/burger.f991476d.png\";","import './App.css';\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport { SiTwitter } from 'react-icons/si';\nimport { SiDiscord } from 'react-icons/si';\nimport FlyFrogs from './artifacts/contracts/FlyFrogs.sol/FlyFrogs.json';\nimport frog1 from './images/burger.png';\n\n// Update with the contract address logged out to the CLI when it was deployed\nconst flyfrogsAddress = \"0x610178dA211FEF7D417bC0e6FeD39F05609AD788\"\n\nfunction App() {\n  // store amount in local state\n  const [quantity, setQuantity] = useState()\n\n  // request access to the user's MetaMask account\n  // async function requestAccount() {\n  //   await window.ethereum.request({ method: 'eth_requestAccounts' });\n  // }\n  \n  async function getFlyFrogs() {\n    if (typeof window.ethereum !== 'undefined') {\n      const [account] = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(flyfrogsAddress, FlyFrogs.abi, provider)\n      const balance = await contract.walletOfOwner(account);\n      console.log(\"Frogs: \", balance.toString());\n    }\n  }\n\n  async function mintFrogs() {\n    if (typeof window.ethereum !== 'undefined') {\n      const [account] = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(flyfrogsAddress, FlyFrogs.abi, signer);\n      const total = (quantity * 0.02).toString()\n      const transaction = await contract.mint(account, quantity, {value: ethers.utils.parseEther(total)});\n      await transaction.wait();\n      console.log(`${quantity} Frogs successfully minted to ${account}`);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"App-container\">\n          <div className=\"flex\">\n            <div className=\"flex-item\">\n              <h1 className=\"App-heading\">Fly Frogs</h1>\n              <p>\n                Hits the Pond Sept. 3rd<br />\n                0.022 ETH\n              </p>\n              {\n                //<input onChange={e => setQuantity(e.target.value)} placeholder=\"Quantity\" type=\"number\" />\n                //<button onClick={mintFrogs}>Mint!</button>\n              }\n            </div>\n            <div className=\"flex-item\">\n              <img src={frog1} alt=\"Fly Frog with burger hat\" />\n            </div>\n          </div>\n        </div>\n      </header>\n      <section className=\"App-about\">\n        <div className=\"App-container\">\n          <h2>Come on get hoppy!</h2>\n          <p>\n            Fly Frogs are a collection of 10,000 randomly generated NFTs. No two frogs are exactly alike. The frogs are composed of 120 assets across 6 traits:\n          </p>\n          <ul>\n            <li>backgrounds</li>\n            <li>skins</li>\n            <li>heads</li>\n            <li>eyes</li>\n            <li>mouths</li>\n            <li>outfits</li>\n          </ul>\n          <p>Fly Frogs will be available to purchase from this website starting <strong>Friday Sept. 3 at 11AM EST</strong>.</p>\n          <p>It costs 0.022 ETH to mint a Fly Frog. Limit 30 frogs per transaction. Fly Frogs will be revealed instantly after minting.</p>\n          <p>We&rsquo;re reserving some Fly Frogs for promotions and giveaways. Hop on over to <a href=\"https://twitter.com/FlyFrogsNFT\" target=\"_blank\" className=\"App-link\" rel=\"noreferrer\">Twitter</a> and <a href=\"https://discord.com/invite/6gjgcfcR\" target=\"_blank\" className=\"App-link\" rel=\"noreferrer\">Discord</a> to join the Fly Frog community!</p>\n        </div>\n      </section>\n      <footer className=\"App-footer\">\n        <div className=\"App-container\">\n          <a href=\"https://twitter.com/FlyFrogsNFT\" target=\"_blank\" rel=\"noreferrer\"><SiTwitter /></a>\n          <a href=\"https://discord.com/invite/6gjgcfcR\" target=\"_blank\" rel=\"noreferrer\"><SiDiscord /></a>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}